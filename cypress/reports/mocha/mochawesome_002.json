{
  "stats": {
    "suites": 2,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-20T19:38:06.914Z",
    "end": "2022-09-20T19:38:11.142Z",
    "duration": 4228,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e80202be-7685-4d09-a4a0-b62ccc1c563c",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4562dc5a-b9c9-4bb3-9340-c6e9e32ab661",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 318,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, 'get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "01ab0e29-b022-4a65-93af-52bc9050ab74",
              "parentUUID": "4562dc5a-b9c9-4bb3-9340-c6e9e32ab661",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 613,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let produto = _facture.default.gerarProduto();\n_serverest.default.cadastrarProdutoComSucesso(produto).then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "c18165ab-f056-480c-af5a-baca324bb7e3",
                  "parentUUID": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Não deve postar um produto já cadastrado",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Não deve postar um produto já cadastrado",
                  "timedOut": null,
                  "duration": 823,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoExistente();\ncy.get('@produtoExistente').then(produto => {\n  _serverest.default.cadastrarProdutoComSucesso(produto).then(res => {\n    cy.contractValidation(res, 'post-produtos', 400);\n    _validaServerest.default.validarCadastroDeProdutoSemSucesso(res);\n  });\n});",
                  "err": {},
                  "uuid": "2b36f5e1-67a5-4f77-a12e-6ed8f71a35e9",
                  "parentUUID": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve realizar a busca do produto cadastrado pelo Id",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve realizar a busca do produto cadastrado pelo Id",
                  "timedOut": null,
                  "duration": 634,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoCadastradoPorId().then(res => {\n  cy.contractValidation(res, 'get-produtos-by-id', 200);\n  _validaServerest.default.validarBuscaDeProdutoCadastradoPorId(res);\n});",
                  "err": {},
                  "uuid": "987ff9fe-0304-4a58-bdf1-18bcdd050911",
                  "parentUUID": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve realizar a busca de um produto por um Id não existente",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve realizar a busca de um produto por um Id não existente",
                  "timedOut": null,
                  "duration": 600,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoCadastradoPorIdSemSucesso().then(res => {\n  cy.contractValidation(res, 'get-produtos-by-id', 400);\n  _validaServerest.default.validarBuscaDeProdutoCadastradoPorIdSemSucesso(res);\n});",
                  "err": {},
                  "uuid": "a1b3a95c-07bd-4797-9574-5c0231a22450",
                  "parentUUID": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve editar os dados do produto cadastrado com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve editar os dados do produto cadastrado com sucesso",
                  "timedOut": null,
                  "duration": 605,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.editarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, 'put-produtos-by-id', 200);\n  _validaServerest.default.validarEdicaoDeProdutoCadastradoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "170589c6-830b-41d3-bc91-5d4c1844cc22",
                  "parentUUID": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir o produto cadastrado com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve excluir o produto cadastrado com sucesso",
                  "timedOut": null,
                  "duration": 591,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, 'delete-produtos-by-id', 200);\n  _validaServerest.default.validarExclusaoDeProduto(res);\n});",
                  "err": {},
                  "uuid": "b94e0739-546d-4157-9409-0923a1646eb2",
                  "parentUUID": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c18165ab-f056-480c-af5a-baca324bb7e3",
                "2b36f5e1-67a5-4f77-a12e-6ed8f71a35e9",
                "987ff9fe-0304-4a58-bdf1-18bcdd050911",
                "a1b3a95c-07bd-4797-9574-5c0231a22450",
                "170589c6-830b-41d3-bc91-5d4c1844cc22",
                "b94e0739-546d-4157-9409-0923a1646eb2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3866,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "01ab0e29-b022-4a65-93af-52bc9050ab74"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 318,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}