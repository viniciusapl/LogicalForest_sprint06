{
  "stats": {
    "suites": 2,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-21T21:10:11.086Z",
    "end": "2022-09-21T21:10:15.659Z",
    "duration": 4573,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2ec78cb5-be1a-48d1-85a1-37229f8ecb5c",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d14f40ea-d88f-467b-a114-ef77300e0b61",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 419,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, 'get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "bd023abb-b0f7-4273-a080-e9fa3d90fefd",
              "parentUUID": "d14f40ea-d88f-467b-a114-ef77300e0b61",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "1ee88557-b836-47c0-b37f-e33e049dc03a",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 667,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let produto = _facture.default.gerarProduto();\n_serverest.default.cadastrarProdutoComSucesso(produto).then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "70a5a096-eb41-494b-a12b-e1a0b267ed2d",
                  "parentUUID": "1ee88557-b836-47c0-b37f-e33e049dc03a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Não deve postar um produto já cadastrado",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Não deve postar um produto já cadastrado",
                  "timedOut": null,
                  "duration": 859,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoExistente();\ncy.get('@produtoExistente').then(produto => {\n  _serverest.default.cadastrarProdutoComSucesso(produto).then(res => {\n    cy.contractValidation(res, 'post-produtos', 400);\n    _validaServerest.default.validarCadastroDeProdutoSemSucesso(res);\n  });\n});",
                  "err": {},
                  "uuid": "67608f73-07a8-483f-9284-7f147f2e5851",
                  "parentUUID": "1ee88557-b836-47c0-b37f-e33e049dc03a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve realizar a busca do produto cadastrado pelo Id",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve realizar a busca do produto cadastrado pelo Id",
                  "timedOut": null,
                  "duration": 610,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoCadastradoPorId().then(res => {\n  cy.contractValidation(res, 'get-produtos-by-id', 200);\n  _validaServerest.default.validarBuscaDeProdutoCadastradoPorId(res);\n});",
                  "err": {},
                  "uuid": "6d9733be-4a4d-49c4-a80d-9d502def3226",
                  "parentUUID": "1ee88557-b836-47c0-b37f-e33e049dc03a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve realizar a busca de um produto por um Id não existente",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve realizar a busca de um produto por um Id não existente",
                  "timedOut": null,
                  "duration": 609,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoCadastradoPorIdSemSucesso().then(res => {\n  cy.contractValidation(res, 'get-produtos-by-id', 400);\n  _validaServerest.default.validarBuscaDeProdutoCadastradoPorIdSemSucesso(res);\n});",
                  "err": {},
                  "uuid": "4afa6c76-1687-433c-81f2-71a18824e04e",
                  "parentUUID": "1ee88557-b836-47c0-b37f-e33e049dc03a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve editar os dados do produto cadastrado com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve editar os dados do produto cadastrado com sucesso",
                  "timedOut": null,
                  "duration": 687,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.editarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, 'put-produtos-by-id', 200);\n  _validaServerest.default.validarEdicaoDeProdutoCadastradoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "92c35457-1e55-4e4d-9be1-297eb13bdd41",
                  "parentUUID": "1ee88557-b836-47c0-b37f-e33e049dc03a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir o produto cadastrado com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve excluir o produto cadastrado com sucesso",
                  "timedOut": null,
                  "duration": 643,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, 'delete-produtos-by-id', 200);\n  _validaServerest.default.validarExclusaoDeProduto(res);\n});",
                  "err": {},
                  "uuid": "d7543540-34d6-48b2-a051-00e5febf2035",
                  "parentUUID": "1ee88557-b836-47c0-b37f-e33e049dc03a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "70a5a096-eb41-494b-a12b-e1a0b267ed2d",
                "67608f73-07a8-483f-9284-7f147f2e5851",
                "6d9733be-4a4d-49c4-a80d-9d502def3226",
                "4afa6c76-1687-433c-81f2-71a18824e04e",
                "92c35457-1e55-4e4d-9be1-297eb13bdd41",
                "d7543540-34d6-48b2-a051-00e5febf2035"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4075,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "bd023abb-b0f7-4273-a080-e9fa3d90fefd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}