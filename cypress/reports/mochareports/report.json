{
  "stats": {
    "suites": 4,
    "tests": 25,
    "passes": 23,
    "pending": 0,
    "failures": 2,
    "start": "2022-09-20T19:37:49.631Z",
    "end": "2022-09-20T19:38:19.975Z",
    "duration": 11977,
    "testsRegistered": 25,
    "passPercent": 92,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dc5130c1-dce3-450f-8924-3aafefad23a1",
      "title": "",
      "fullFile": "cypress/integration/2.login.spec.js",
      "file": "cypress/integration/2.login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "372daaf5-c076-4868-97bd-43a05d7a8769",
          "title": "Casos de teste sobre a rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar o login corretamente",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar o login corretamente",
              "timedOut": null,
              "duration": 497,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    cy.contractValidation(res, 'post-login', 200);\n    _validaServerest.default.validaLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "a7ffdc23-1ec8-49f1-9254-4fd245590810",
              "parentUUID": "372daaf5-c076-4868-97bd-43a05d7a8769",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar a tentativa de login com senha errada sem sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar a tentativa de login com senha errada sem sucesso",
              "timedOut": null,
              "duration": 773,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioComSenhaErrada();\ncy.get('@usuarioComSenhaErrada').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    cy.contractValidation(res, 'post-login', 400);\n    _validaServerest.default.validaLoginSemSucesso(res);\n  });\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 400",
                "estack": "AssertionError: expected 401 to equal 400\n    at Function.validaLoginSemSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\2.login.spec.js:555:32)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\2.login.spec.js:197:34)",
                "diff": "- 401\n+ 400\n"
              },
              "uuid": "db29c192-23c4-414e-99b9-b2d9d3254857",
              "parentUUID": "372daaf5-c076-4868-97bd-43a05d7a8769",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar tentativa de login sem sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar tentativa de login sem sucesso",
              "timedOut": null,
              "duration": 464,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let usuario = {\n  email: 'naoexiste@test.com',\n  password: '123'\n};\n_serverest.default.logar(usuario).then(res => {\n  cy.contractValidation(res, 'post-login', 400);\n  _validaServerest.default.validaLoginSemSucesso(res);\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 400",
                "estack": "AssertionError: expected 401 to equal 400\n    at Function.validaLoginSemSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\2.login.spec.js:555:32)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\2.login.spec.js:210:32)",
                "diff": "- 401\n+ 400\n"
              },
              "uuid": "432ae75c-82c2-45b1-ad34-eebdcbfac493",
              "parentUUID": "372daaf5-c076-4868-97bd-43a05d7a8769",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7ffdc23-1ec8-49f1-9254-4fd245590810"
          ],
          "failures": [
            "db29c192-23c4-414e-99b9-b2d9d3254857",
            "432ae75c-82c2-45b1-ad34-eebdcbfac493"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1734,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e80202be-7685-4d09-a4a0-b62ccc1c563c",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4562dc5a-b9c9-4bb3-9340-c6e9e32ab661",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 318,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, 'get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "01ab0e29-b022-4a65-93af-52bc9050ab74",
              "parentUUID": "4562dc5a-b9c9-4bb3-9340-c6e9e32ab661",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 613,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let produto = _facture.default.gerarProduto();\n_serverest.default.cadastrarProdutoComSucesso(produto).then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "c18165ab-f056-480c-af5a-baca324bb7e3",
                  "parentUUID": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Não deve postar um produto já cadastrado",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Não deve postar um produto já cadastrado",
                  "timedOut": null,
                  "duration": 823,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoExistente();\ncy.get('@produtoExistente').then(produto => {\n  _serverest.default.cadastrarProdutoComSucesso(produto).then(res => {\n    cy.contractValidation(res, 'post-produtos', 400);\n    _validaServerest.default.validarCadastroDeProdutoSemSucesso(res);\n  });\n});",
                  "err": {},
                  "uuid": "2b36f5e1-67a5-4f77-a12e-6ed8f71a35e9",
                  "parentUUID": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve realizar a busca do produto cadastrado pelo Id",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve realizar a busca do produto cadastrado pelo Id",
                  "timedOut": null,
                  "duration": 634,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoCadastradoPorId().then(res => {\n  cy.contractValidation(res, 'get-produtos-by-id', 200);\n  _validaServerest.default.validarBuscaDeProdutoCadastradoPorId(res);\n});",
                  "err": {},
                  "uuid": "987ff9fe-0304-4a58-bdf1-18bcdd050911",
                  "parentUUID": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve realizar a busca de um produto por um Id não existente",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve realizar a busca de um produto por um Id não existente",
                  "timedOut": null,
                  "duration": 600,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoCadastradoPorIdSemSucesso().then(res => {\n  cy.contractValidation(res, 'get-produtos-by-id', 400);\n  _validaServerest.default.validarBuscaDeProdutoCadastradoPorIdSemSucesso(res);\n});",
                  "err": {},
                  "uuid": "a1b3a95c-07bd-4797-9574-5c0231a22450",
                  "parentUUID": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve editar os dados do produto cadastrado com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve editar os dados do produto cadastrado com sucesso",
                  "timedOut": null,
                  "duration": 605,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.editarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, 'put-produtos-by-id', 200);\n  _validaServerest.default.validarEdicaoDeProdutoCadastradoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "170589c6-830b-41d3-bc91-5d4c1844cc22",
                  "parentUUID": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir o produto cadastrado com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve excluir o produto cadastrado com sucesso",
                  "timedOut": null,
                  "duration": 591,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, 'delete-produtos-by-id', 200);\n  _validaServerest.default.validarExclusaoDeProduto(res);\n});",
                  "err": {},
                  "uuid": "b94e0739-546d-4157-9409-0923a1646eb2",
                  "parentUUID": "c618bf37-c876-4a5f-b479-b4658fb8b90d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c18165ab-f056-480c-af5a-baca324bb7e3",
                "2b36f5e1-67a5-4f77-a12e-6ed8f71a35e9",
                "987ff9fe-0304-4a58-bdf1-18bcdd050911",
                "a1b3a95c-07bd-4797-9574-5c0231a22450",
                "170589c6-830b-41d3-bc91-5d4c1844cc22",
                "b94e0739-546d-4157-9409-0923a1646eb2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3866,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "01ab0e29-b022-4a65-93af-52bc9050ab74"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 318,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b3f30f8b-acc4-4498-9fc1-3948f21d540f",
      "title": "",
      "fullFile": "cypress/integration/4.carrinhos.spec.js",
      "file": "cypress/integration/4.carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "422f0ced-3db9-44d7-835c-5d65ea723e12",
          "title": "Casos de teste sobre a rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os carrinhos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Deve buscar todos os carrinhos cadastrados",
              "timedOut": null,
              "duration": 265,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  cy.contractValidation(res, 'get-carrinhos', 200);\n  _validaServerest.default.validarBuscaDeCarrinhos(res);\n});",
              "err": {},
              "uuid": "0ed9b788-1aee-4926-b174-141dae80c337",
              "parentUUID": "422f0ced-3db9-44d7-835c-5d65ea723e12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "69799309-67ab-4547-b520-580ace8581d5",
              "title": "Realizar o login com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve cadastrar um carrinho com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Realizar o login com sucesso Deve cadastrar um carrinho com sucesso",
                  "timedOut": null,
                  "duration": 875,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoParaCarrinho(); //Aqui eu faço a busca de um produto aleatório dentro da lista de produtos\n\ncy.get('@produtoParaCarrinho').then(produto => {\n  //O produto retornado na linha acima é chamado aqui no cy.get('@produtoParaCarrinho') e enviado para a próxima função para a adição do carrinho\n  _serverest.default.adicionarCarrinhoComSucesso(produto).then(res => {\n    cy.contractValidation(res, 'post-carrinhos', 201);\n    _validaServerest.default.validarCadastroDeCarrinho(res);\n  });\n});",
                  "err": {},
                  "uuid": "ee119f55-bc5f-4057-ba18-08aebada9153",
                  "parentUUID": "69799309-67ab-4547-b520-580ace8581d5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar um carrinho pelo seu Id",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Realizar o login com sucesso Deve buscar um carrinho pelo seu Id",
                  "timedOut": null,
                  "duration": 665,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarCarrinhoCadastradoPorId().then(res => {\n  cy.contractValidation(res, 'get-carrinhos-by-id', 200);\n  _validaServerest.default.validarBuscaDeCarrinhoPorId(res);\n});",
                  "err": {},
                  "uuid": "429e5b85-8cc9-4e8e-9ae4-a9524269a68d",
                  "parentUUID": "69799309-67ab-4547-b520-580ace8581d5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve realizar a busca de um carrinho por um Id não existente",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Realizar o login com sucesso Deve realizar a busca de um carrinho por um Id não existente",
                  "timedOut": null,
                  "duration": 698,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarCarrinhoCadastradoPorIdSemSucesso().then(res => {\n  cy.contractValidation(res, 'get-carrinhos-by-id', 400);\n  _validaServerest.default.validarBuscaDeCarrinhoCadastradoPorIdSemSucesso(res);\n});",
                  "err": {},
                  "uuid": "0a2987ce-a4b5-41a6-b008-d2a447ab7f8c",
                  "parentUUID": "69799309-67ab-4547-b520-580ace8581d5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve realizar a exclusão do carrinho através da finalização da compra com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Realizar o login com sucesso Deve realizar a exclusão do carrinho através da finalização da compra com sucesso",
                  "timedOut": null,
                  "duration": 649,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompraComSucesso().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos-concluir-compra', 200);\n  _validaServerest.default.validarFinalizaçãoDeCompraComSucesso(res);\n});",
                  "err": {},
                  "uuid": "225b8dad-5f2f-402b-9230-779a68b53b5a",
                  "parentUUID": "69799309-67ab-4547-b520-580ace8581d5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ee119f55-bc5f-4057-ba18-08aebada9153",
                "429e5b85-8cc9-4e8e-9ae4-a9524269a68d",
                "0a2987ce-a4b5-41a6-b008-d2a447ab7f8c",
                "225b8dad-5f2f-402b-9230-779a68b53b5a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2887,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "0ed9b788-1aee-4926-b174-141dae80c337"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 265,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4746bdd4-ce67-419b-a596-3a99561a0fc7",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5325938d-f3eb-4c39-b56f-16bd685749f7",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuários cadastrados",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuários cadastrados",
              "timedOut": null,
              "duration": 672,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, 'get-usuarios', 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "27c001ed-427e-4928-8ce2-0b0c090fcee4",
              "parentUUID": "5325938d-f3eb-4c39-b56f-16bd685749f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um novo usuário administrador",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve cadastrar um novo usuário administrador",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastrarNovoUsuarioAleatorio().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  _validaServerest.default.validarCadastroDeUsuarioComSucesso(res);\n});",
              "err": {},
              "uuid": "366ddba6-1388-4984-a382-15ece35f9694",
              "parentUUID": "5325938d-f3eb-4c39-b56f-16bd685749f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve realizar o cadastro de um usuário com e-mail já cadastrado",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Não deve realizar o cadastro de um usuário com e-mail já cadastrado",
              "timedOut": null,
              "duration": 437,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioExistente();\ncy.get('@usuarioExistente').then(usuario => {\n  _serverest.default.cadastrarNovoUsuario(usuario).then(res => {\n    cy.contractValidation(res, 'post-usuarios', 400);\n    _validaServerest.default.validarCadastroDeUsuarioSemSucesso(res);\n  });\n});",
              "err": {},
              "uuid": "20ffe3c0-502f-4908-8e28-456b32457794",
              "parentUUID": "5325938d-f3eb-4c39-b56f-16bd685749f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuário cadastrado pelo seu Id com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar o usuário cadastrado pelo seu Id com sucesso",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioPorId().then(res => {\n  cy.contractValidation(res, 'get-usuario-by-id', 200);\n  _validaServerest.default.validarBuscaDeUsuarioPorId(res);\n});",
              "err": {},
              "uuid": "0360a8c7-1b19-4422-b36e-922e09d2c593",
              "parentUUID": "5325938d-f3eb-4c39-b56f-16bd685749f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuário cadastrado pelo seu Id sem sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar o usuário cadastrado pelo seu Id sem sucesso",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioPorIdSemSucesso().then(res => {\n  cy.contractValidation(res, 'get-usuario-by-id', 400);\n  _validaServerest.default.validarBuscaDeUsuarioPorIdSemSucesso(res);\n});",
              "err": {},
              "uuid": "aae4e3b8-8a42-4bc3-8407-9ceb8ac08462",
              "parentUUID": "5325938d-f3eb-4c39-b56f-16bd685749f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar os dados do usuário cadastrado",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve editar os dados do usuário cadastrado",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.editarUsuarioCadastrado().then(res => {\n  cy.contractValidation(res, 'put-usuarios-by-id', 200);\n  _validaServerest.default.validarEdicaoDeUsuario(res);\n});",
              "err": {},
              "uuid": "3bbbbec6-f07e-4de5-86a7-404230f7f32c",
              "parentUUID": "5325938d-f3eb-4c39-b56f-16bd685749f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve excluir o usuário cadastrado",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve excluir o usuário cadastrado",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.excluirUsuarioCadastrado().then(res => {\n  cy.contractValidation(res, 'delete-usuarios-by-id', 200);\n  _validaServerest.default.validarExclusaoDeUsuario(res);\n});",
              "err": {},
              "uuid": "29b6d6d6-d8a2-4787-a3e9-e85e382ba8f6",
              "parentUUID": "5325938d-f3eb-4c39-b56f-16bd685749f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve postar um novo usuário administrador já cadastrado",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Não deve postar um novo usuário administrador já cadastrado",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroDeUsuarioSemSucesso(res);\n});",
              "err": {},
              "uuid": "191ddf55-141e-406e-8f75-1556b1668612",
              "parentUUID": "5325938d-f3eb-4c39-b56f-16bd685749f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salvar um usuário no arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar e salvar um usuário no arquivo json",
              "timedOut": null,
              "duration": 264,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.log(JSON.stringify(res.body.usuarios[0]));\n  cy.writeFile('./cypress/fixtures/users.json', res.body.usuarios[0]);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "618119fd-98a0-48f9-82e0-cea12aa5a6aa",
              "parentUUID": "5325938d-f3eb-4c39-b56f-16bd685749f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salvar um usuário no arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar e salvar um usuário no arquivo json",
              "timedOut": null,
              "duration": 278,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuariosAdministradores();\ncy.get('@listaDeAdms').then(res => {\n  cy.log(JSON.stringify(res));\n  cy.writeFile('./cypress/fixtures/usuarios-adms.json', res);\n  _validaServerest.default.validarAdm(res);\n});",
              "err": {},
              "uuid": "8c6c6d9c-1c2c-4844-bc7d-43dd95f1bfa2",
              "parentUUID": "5325938d-f3eb-4c39-b56f-16bd685749f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "27c001ed-427e-4928-8ce2-0b0c090fcee4",
            "366ddba6-1388-4984-a382-15ece35f9694",
            "20ffe3c0-502f-4908-8e28-456b32457794",
            "0360a8c7-1b19-4422-b36e-922e09d2c593",
            "aae4e3b8-8a42-4bc3-8407-9ceb8ac08462",
            "3bbbbec6-f07e-4de5-86a7-404230f7f32c",
            "29b6d6d6-d8a2-4787-a3e9-e85e382ba8f6",
            "191ddf55-141e-406e-8f75-1556b1668612",
            "618119fd-98a0-48f9-82e0-cea12aa5a6aa",
            "8c6c6d9c-1c2c-4844-bc7d-43dd95f1bfa2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2907,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}